## Docker Volumes

In Docker, a volume is a persistent data storage mechanism that allows containers to share and store data independent of the container's lifecycle. It provides a way to manage and persist data generated or used by Docker containers. Volumes are used to store files, directories, and other data that need to persist beyond the lifecycle of a container.

# Docker provides different types of volumes to cater to various use cases:

1. Named Volumes: These are volumes with a user-defined name that can be easily referenced. Named volumes are created and managed by Docker, and they provide a convenient way to manage and share data between containers. Docker ensures the persistence and lifecycle management of named volumes.

2. Bind Mounts: Bind mounts map a host file or directory directly into a container's file system. With bind mounts, you can specify a path on the host machine that will be mounted into the container. Changes made to the host files or directories will be immediately visible within the container, and vice versa. Bind mounts provide flexibility, as they are not tied to Docker's management and can be used for both read and write operations.

3. TMPFS Mounts: TMPFS mounts are stored in the host machine's memory and are suitable for storing temporary data. This type of volume is not persisted on disk and is deleted when the container is stopped or removed. TMPFS mounts are useful for applications that require fast and temporary storage.


# List all Docker Volumes

Usage: docker volume ls
Example: docker volume ls

# Create a volume

Usage: docker volume create <volume name>
Example: docker volume create shared-vol

# Inspect a volume

Usage: docker volume inspect <volume name>
Example: docker volume inspect shared-vol

# Mount a container with a volume using docker run

Usage: --mount source=<volume name>, target=<container dir>
Example: docker run -it --name=foo --mount source=shared-vol,target=/src/shared ubuntu bash

# Bind Mounts

Mount a container with a bind mount using docker run
Usage: --mount type=bind source=<host dir>, target=<container dir>
Example:docker run -it --name=foo --mount type=bind source=/Users/foo/bindmountdir, target=/src/mountdir ubuntu bash

# tmpfs mounts

Mount a container with a tmpfs mount using docker run
Usage: --mount type=tmpfs, destination=<container dir>
Example: docker run -it --name=baz --mount type=tmpfs, destination=/tmpdir ubuntu bash
